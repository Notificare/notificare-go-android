plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'org.jetbrains.kotlin.plugin.parcelize'
    id 'androidx.navigation.safeargs'
    id 'com.google.gms.google-services'
    id 'com.google.dagger.hilt.android'
    id 'com.google.firebase.crashlytics'
}

def properties = new Properties()
properties.load(rootProject.file('local.properties').newDataInputStream())

android {
    compileSdk compile_sdk_version

    defaultConfig {
        applicationId 're.notifica.go'
        minSdk min_sdk_version
        targetSdk target_sdk_version
        versionCode 1
        versionName '1.0.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString()
                ]
            }
        }

        buildConfigField 'String', 'LOCATION_DATA_PRIVACY_POLICY_URL', "\"https://ntc.re/0OMbJKeJ2m\""
    }

    signingConfigs {
        debug {
            if (project.file('debug.keystore').exists()) {
                storeFile file('debug.keystore')
                storePassword properties.getProperty('keystore.debug.store.password')
                keyAlias properties.getProperty('keystore.debug.key.alias')
                keyPassword properties.getProperty('keystore.debug.key.password')
            }
        }
        release {
            if (project.file('release.keystore').exists()) {
                storeFile file('release.keystore')
                storePassword properties.getProperty('keystore.release.store.password')
                keyAlias properties.getProperty('keystore.release.key.alias')
                keyPassword properties.getProperty('keystore.release.key.password')
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
            signingConfig signingConfigs.debug

            buildConfigField 'String', 'GOOGLE_AUTH_SERVER_ID', "\"${properties.getProperty("google.auth.server.id.debug")}\""

            manifestPlaceholders = [
                    configuration_link_host: 'go-demo-dev.ntc.re',
                    crashlyticsEnabled: false,
            ]
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            buildConfigField 'String', 'GOOGLE_AUTH_SERVER_ID', "\"${properties.getProperty("google.auth.server.id.release")}\""

            manifestPlaceholders = [
                    configuration_link_host: 'go-demo.ntc.re',
                    crashlyticsEnabled: true,
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
}

dependencies {
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$kotlinx_coroutines_version"

    // Android
    implementation "androidx.activity:activity-ktx:$androidx_activity_version"
    implementation "androidx.appcompat:appcompat:$androidx_app_compat_version"
    implementation "androidx.browser:browser:$androidx_browser_version"
    implementation "androidx.camera:camera-camera2:$androidx_camera_version"
    implementation "androidx.camera:camera-lifecycle:$androidx_camera_version"
    implementation "androidx.camera:camera-view:$androidx_camera_view_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraint_layout_version"
    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation "androidx.fragment:fragment-ktx:$androidx_fragment_version"
    implementation "androidx.hilt:hilt-work:$androidx_hilt_work_version"
    kapt "androidx.hilt:hilt-compiler:$androidx_hilt_work_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$androidx_navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$androidx_navigation_version"
    implementation "androidx.room:room-ktx:$androidx_room_version"
    implementation "androidx.room:room-runtime:$androidx_room_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$androidx_room_version"
    implementation "androidx.viewpager2:viewpager2:$androidx_view_pager_version"
    implementation "androidx.work:work-runtime-ktx:$android_work_version"

    // Google
    implementation "com.google.android.gms:play-services-auth:$google_auth_version"
    implementation "com.google.android.material:material:$google_material_version"
    implementation "com.google.dagger:hilt-android:$google_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$google_hilt_version"
    implementation "com.google.mlkit:barcode-scanning:$google_barcode_scanning_version"

    // Firebase
    implementation platform("com.google.firebase:firebase-bom:$google_firebase_version")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    // Notificare
    implementation "re.notifica:notificare:$notificare_version"
    implementation "re.notifica:notificare-assets:$notificare_version"
    implementation "re.notifica:notificare-geo:$notificare_version"
    implementation "re.notifica:notificare-geo-gms:$notificare_version"
    implementation "re.notifica:notificare-geo-beacons:$notificare_version"
    implementation "re.notifica:notificare-inbox:$notificare_version"
    implementation "re.notifica:notificare-loyalty:$notificare_version"
    implementation "re.notifica:notificare-push:$notificare_version"
    implementation "re.notifica:notificare-push-gms:$notificare_version"
    implementation "re.notifica:notificare-push-ui:$notificare_version"
    implementation "re.notifica:notificare-push-ui-gms:$notificare_version"
    implementation "re.notifica:notificare-scannables:$notificare_version"
    implementation "re.notifica:notificare-scannables-gms:$notificare_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // OkHttp & Retrofit
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    implementation "com.airbnb.android:lottie:$lottie_version"
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "com.tbuonomo:dotsindicator:$dots_indicator_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
